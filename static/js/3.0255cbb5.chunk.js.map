{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","React","Component","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","styles","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","profile","handleSubmit","error","editForm","onSubmit","editButton","formSummaryError","authorName","createField","InputArea","authorjob","type","Textarea","authoAbout","aboutMe","contacts","Object","keys","map","key","contactTitle","ProfileData","onMainPhotoSelected","isOwner","goToEditMode","authorContainer","fullName","lookingForAJob","lookingForAJobDescription","contactValue","Contact","ProfileInfo","target","files","length","savePhoto","author","avatarContainer","authorAvatar","src","photos","large","userPhoto","title","initialValues","formData","saveProfile","then","Preloader","Post","post","authorAva","text","message","Posts","memo","console","log","postsElements","posts","id","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","input","Field","addPost","name","placeholder","component","validate","required","button","values","newPostText","PostsContainer","connect","state","profilePage","postsData","newPostTextBody","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.0255cbb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"ProfileInfo_author__3pmGH\",\"authorAvatar\":\"ProfileInfo_authorAvatar__1n00d\",\"avatarContainer\":\"ProfileInfo_avatarContainer__1Nl_A\",\"authorContainer\":\"ProfileInfo_authorContainer__1OrzH\",\"contacts\":\"ProfileInfo_contacts__3y62P\",\"contactTitle\":\"ProfileInfo_contactTitle__2tda8\",\"editButton\":\"ProfileInfo_editButton__wSjKk\",\"formSummaryError\":\"ProfileInfo_formSummaryError__3Pphw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__tkALa\",\"addPost\":\"Posts_addPost__3WYCx\",\"button\":\"Posts_button__32360\",\"input\":\"Posts_input__tIeJQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3rcfg\",\"authorAva\":\"Post_authorAva__3wbGO\",\"text\":\"Post_text__1cnvX\"};","/* eslint-disable no-unused-vars */\nimport React, {Component, useEffect, useState} from 'react';\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(()=>{\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus( e.currentTarget.value)\n    }\n\n  return (\n    <div>\n      {!editMode &&\n      <div>\n        <p className={styles.status}> Status: <span onClick={activateEditMode}>{props.status || \"---\"} </span></p>\n      </div>\n      }\n      {editMode &&\n      <div>\n        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\n               value={status}/>\n      </div>\n      }\n    </div>\n  )\n};\n\nexport default ProfileStatusWithHooks;","/* eslint-disable no-unused-vars */\nimport React, {Component} from 'react';\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\n\n\nclass ProfileStatus extends React.Component {\n  state = {\n    editMode: false,\n    status: this.props.status,\n  }\n  activateEditMode = () => {\n    this.setState({\n      editMode: true\n    })\n  }\n  deactivateEditMode = () => {\n    this.setState({\n      editMode: false\n    });\n    this.props.updateStatus(this.state.status);\n\n  }\n  onStatusChange = (e) => {\n    this.setState({\n      status: e.currentTarget.value\n    });\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n\n        {!this.state.editMode &&\n        <div>\n          <span onClick={this.activateEditMode}>{this.props.status || \"---\"}</span>\n        </div>\n        }\n        {this.state.editMode &&\n        <div>\n          <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\n                 value={this.state.status}/>\n        </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default ProfileStatus","import styles from \"./ProfileInfo/ProfileInfo.module.css\";\nimport React from \"react\";\nimport {createField, InputArea, Textarea} from \"../common/FormsControls/FormsControls\";\nimport {reduxForm} from \"redux-form\";\n\n\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\n  return <form className={styles.editForm} onSubmit={handleSubmit}>\n    <button className={styles.editButton}>save</button>\n    {error && <p\n      className={styles.formSummaryError}>{error}</p>}\n    <p className={styles.authorName}>Name: <span>{createField('Full name', 'fullName', [], InputArea)}</span></p>\n    <p className={styles.authorjob}>Looking for a job : <span>{createField(' ',\n      'lookingForAJob', [], InputArea, {type: 'checkbox'})}</span>\n    </p>\n    <p className={styles.authorjob}>Skills : <span>{createField('Skills ',\n      'lookingForAJobDescription', [], Textarea)}\n    </span>\n    </p>\n    <p className={styles.authoAbout}>About me: <span>{profile.aboutMe}\n      {createField('About me', 'aboutMe', [], Textarea)}</span></p>\n\n\n    <div className={styles.contacts}>Contacts: <span>\n      {Object.keys(profile.contacts).map(key => {\n        return <div key={key}>\n          <p className={styles.contactTitle}>{key}: {createField(key, 'contacts.'+ key, [], InputArea)}</p>\n        </div>\n      })}\n    </span>\n    </div>\n  </form>\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\nexport default ProfileDataFormReduxForm;","/* eslint-disable no-unused-vars */\nimport React, {Component, useState} from 'react';\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport userPhoto from '../../../assets/images/user.png';\nimport ProfileStatus from \"./ProfileStatus\"\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport ProfileDataForm from \"../ProfileDataForm\";\n\n\n\n\nconst ProfileInfo = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0]);\n    }\n  }\n  const onSubmit =   (formData) => {\n   props.saveProfile(formData).then(()=>{\n    setEditMode(false);\n  })\n\n\n  }\n\n  if (!props.profile) {\n    return <Preloader/>\n  }\n  return (\n    <>\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n    <div className={styles.author}>\n      <div className={styles.avatarContainer}>\n        <img className={styles.authorAvatar} src={props.profile.photos.large || userPhoto}/>\n        {props.isOwner && <input  type=\"file\" title='' onChange={onMainPhotoSelected}/>}\n        {props.isOwner && <button className={styles.editButton} onClick={()=>{\n          setEditMode(true)}}>edit</button>}\n      </div>\n      {editMode\n        ? <ProfileDataForm initialValues={props.profile}  profile={props.profile} onSubmit={onSubmit} onMainPhotoSelected={onMainPhotoSelected}/> :\n        <ProfileData profile={props.profile} onMainPhotoSelected={onMainPhotoSelected} isOwner={props.isOwner} goToEditMode={()=>{\n          setEditMode(true)}\n        }/>}\n    </div>\n\n      </>\n\n  )\n}\n\nconst ProfileData = ({profile, onMainPhotoSelected, isOwner, goToEditMode}) => {\n  return <>\n    <div className={styles.authorContainer}>\n      <p className={styles.authorName}>Name: <span>{profile.fullName}</span></p>\n      <p className={styles.authorjob}>Looking for a job : <span>{profile.lookingForAJob ? 'yes' : 'no'}</span>\n      </p>\n      {profile.lookingForAJob &&\n      <p className={styles.authorjob}>Skills: <span>{profile.lookingForAJobDescription }</span></p>\n      }\n      <p className={styles.authoAbout}>About me: <span>{profile.aboutMe}</span></p>\n\n      <div className={styles.contacts}>Contacts: <span>{Object.keys(profile.contacts).map(key => {\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n      })}</span></div>\n    </div>\n  </>\n}\n\nconst Contact = ({contactTitle, contactValue}) => {\n  return <p className={styles.contactTitle}>{contactTitle}:<span>{contactValue}</span></p>\n}\nexport default ProfileInfo","import React, { Component } from \"react\";\nimport styles from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={styles.post}>\n\n      <img className={styles.authorAva} src=\"https://pp.userapi.com/c847124/v847124728/335f4/thh2-8S3ZKM.jpg\"/>\n      <p className={styles.text}>{props.message}</p>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport styles from './Posts.module.css';\nimport Post from './Post/Post.jsx';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\n\nconst  Posts= React.memo(props=> {\n  console.log('test')\n  const postsElements = [...props.posts]\n    // .reverse()\n    .map((post) => (\n    <Post key={post.id}  message={post.message} likesCount={post.likesCount} />\n  ));\n  const onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n  const maxLength10 = maxLengthCreator(10);\n  const AddNewPostForm = (props) => {\n    return (\n      <form className={styles.input} onSubmit={props.handleSubmit}>\n        <Field className={styles.addPost} name='newPostText' placeholder='что у вас нового' component={Textarea}\n               validate={[required, maxLength10]}/>\n        <button className={styles.button}>Add post</button>\n      </form>\n    )\n  }\n  const AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n  return (\n    <div className={styles.posts}>\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\n      {postsElements}\n    </div>\n  );\n});\n\nexport default Posts;\n","import React from 'react';\nimport {addPostActionCreator} from '../../../redux/profilePageReducer.js';\nimport Posts from './Posts.jsx';\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.postsData,\n    newPostTextBody: state.profilePage.newPostText,\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n};\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\nexport default PostsContainer;\n","import React from \"react\";\nimport styles from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo.jsx\";\nimport PostsContainer from \"./Posts/PostsContainer.jsx\";\n\n\nconst Profile = (props) => {\n  return (\n    <div className={styles.content}>\n      <ProfileInfo  isOwner={props.isOwner} savePhoto={props.savePhoto} profile={props.profile}\n                    status={props.status} updateStatus={props.updateStatus} saveProfile={props.saveProfile}/>\n      <PostsContainer />\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport styles from \"./Profile.module.css\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profilePageReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n\n  refreshProfile(){\n    let userId = this.props.match.params.userId;\n    if (!userId){\n      userId= this.props.authorizedUserId ;\n      if(!userId){\n        this.props.history.push('/login');\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      this.refreshProfile()\n    }\n  }\n\n  // componentDidUpdate(prevProps, prevState, snapshot) {\n  //   if(this.props.match.params.userId != prevProps.match.params.userId) {\n  //     this.refreshProfile();\n  //   }\n  // };\n  render() {\n    return (\n      <div className={styles.content}>\n        <Profile {...this.props}  profile={this.props.profile}\n                 isOwner ={!this.props.match.params.userId}\n                 savePhoto={ this.props.savePhoto}\n                 status={this.props.status} updateStatus={this.props.updateStatus}/>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\nprofile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n\n});\nexport default  compose(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n  withRouter,\n  // withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}