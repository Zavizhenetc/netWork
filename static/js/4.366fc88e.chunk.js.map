{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Dialogs/Messages/Messages.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Messages","props","className","styles","messages","messages__textContainer","DialogsItem","dialogsItem","to","id","activeClassName","activeLink","key","name","Message","message","Dialogs","state","dialogsPage","dialogsElements","newMessageBody","dialogs","map","dialog","messagesItems","isAuth","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,wBAA0B,2C,oBCApMD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,0BAA0B,wBAA0B,4C,oBCAtHD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,YAAc,iCAAiC,WAAa,kC,gGC0BhHC,EAtBE,SAACC,GAMhB,OACE,yBAAKC,UAAWC,IAAOC,UACrB,yBAAKF,UAAWC,IAAOE,4B,0BCQdC,EAhBK,SAACL,GACnB,OACE,wBAAIC,UAAWC,IAAOI,aACpB,kBAAC,IAAD,CAASC,GAAE,mBAAcP,EAAMQ,IAAMC,gBAAiBP,IAAOQ,WAAYC,IAAKX,EAAMQ,IACjFR,EAAMY,Q,wCCATC,EAAU,SAACb,GACf,OAAO,wBAAIC,UAAWC,IAAOY,SAAUd,EAAMc,UAsDhCC,EAnDC,SAACf,GACf,IAAIgB,EAAQhB,EAAMiB,YAQZC,GAPeF,EAAMG,eAOHH,EAAMI,QAAQC,KAAI,SAACC,GACzC,OAAO,kBAAC,EAAD,CAAaV,KAAMU,EAAOV,KAAMD,IAAKW,EAAOd,GAAIA,GAAIc,EAAOd,SAG9De,EAAgBP,EAAMb,SAASkB,KAAI,SAACP,GAAD,OACvC,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASH,IAAKG,EAAQN,QAIlD,IAAKR,EAAMwB,OAAQ,OAAO,kBAAC,IAAD,CAAUjB,GAAI,WAExC,IAAMkB,EAAcC,YAAiB,IAW9BC,EAAuBC,YAAU,CAACC,KAAK,yBAAhBD,EAVP,SAAC5B,GAEtB,OACE,0BAAM8B,SAAU9B,EAAM+B,cACpB,kBAACC,EAAA,EAAD,CAAQC,UAAWC,IAAWC,SAAU,CAACC,IAAUX,GAC3Cb,KAAM,iBAAkByB,YAAY,uBAC5C,4CAMN,OACE,yBAAKpC,UAAWC,IAAOkB,SACrB,wBAAInB,UAAWC,IAAOoC,cACnBpB,GAEH,yBAAKjB,UAAWC,IAAOC,UACpBoB,EACD,yBAAKtB,UAAWC,IAAOE,yBACrB,kBAAC,EAAD,MACA,kBAACuB,EAAD,CAAsBG,SApCX,SAACS,GACpBvC,EAAMwC,YAAYD,EAAOpB,uB,iDChBrBsB,EAA6B,SAACzB,GAAD,MAAY,CAC7CQ,OAAQR,EAAM0B,KAAKlB,S,OCmBNmB,sBACbC,aAjBsB,SAAC5B,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAGI,SAAC4B,GAC1B,MAAO,CACLL,YAAa,SAACrB,GACZ0B,EAASC,YAAmB3B,UDPF,SAAC4B,GAAc,IACvCC,EADsC,uKAGxC,OAAIC,KAAKjD,MAAMwB,OACR,kBAACuB,EAAcE,KAAKjD,OADG,kBAAC,IAAD,CAAUO,GAAI,eAHJ,GACZ2C,IAAMH,WAQtC,OADqCH,YAAQH,EAARG,CAAoCI,KCO5DL,CAGb5B","file":"static/js/4.366fc88e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"messages__textContainer\":\"Dialogs_messages__textContainer__38EuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__xQGJY\",\"message\":\"Messages_message__3J_zU\",\"messages__textContainer\":\"Messages_messages__textContainer__1OVIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogsItem_dialogsItems__jDgO2\",\"dialogsItem\":\"DialogsItem_dialogsItem__3bS0m\",\"activeLink\":\"DialogsItem_activeLink__16Ilo\"};","import React from 'react';\nimport styles from './Messages.module.css';\n\n\n\nconst Messages = (props) => {\n  // let newMessageBody = props.state.newMessageBody;\n  // const onNewMessageChange = (event) => {\n  //   let body = event.target.value;\n  //   props.onNewMessageChange(body);\n  // }\n  return (\n    <div className={styles.messages}>\n      <div className={styles.messages__textContainer}>\n        {/*<textarea*/}\n        {/*  onChange={onNewMessageChange}*/}\n        {/*  value={newMessageBody}*/}\n        {/*  placeholder='Enter your message'>*/}\n        {/*</textarea>*/}\n        {/*<button type='submit' onClick={props.onSendMessageClick}>Send</button>*/}\n      </div>\n    </div>\n\n  )\n    ;\n};\n\nexport default Messages; \n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"./DialogsItem.module.css\";\n\n\nconst DialogsItem = (props) => {\n  return (\n    <li className={styles.dialogsItem}>\n      <NavLink to={`/Dialogs/${props.id}`} activeClassName={styles.activeLink} key={props.id}>\n        {props.name}\n      </NavLink>\n    </li>\n  );\n};\n\n\n\n\n\n\n\nexport default DialogsItem;\n","import React from \"react\";\nimport styles from \"./Dialogs.module.css\";\nimport Messages from \"./Messages/Messages.jsx\";\nimport DialogsItem from \"./DialogsItem/DialogsItem.jsx\"\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst Message = (props) => {\n  return <li className={styles.message}>{props.message}</li>;\n};\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n  let newMessageBody = state.newMessageBody;\n\n\n\nconst addNewMessage =(values)=>{\n  props.sendMessage(values.newMessageBody);\n}\n  const dialogsElements = state.dialogs.map((dialog) => {\n    return <DialogsItem name={dialog.name} key={dialog.id} id={dialog.id}/>\n  });\n\n  const messagesItems = state.messages.map((message) => (\n    <Message message={message.message} key={message.id}\n    />\n  ));\n  //делаем редирект если не залогинен\n  if (!props.isAuth) return <Redirect to={\"/Login\"}/>\n\n  const maxLength50 = maxLengthCreator(50)\n  const AddMessageForm = (props) => {\n\n    return (\n      <form onSubmit={props.handleSubmit} >\n        <Field  component={Textarea}  validate={[required, maxLength50 ]}\n                name={'newMessageBody'} placeholder='Enter your message'/>\n        <button >Send</button>\n      </form>\n    )\n  }\n  const  AddMessageFormRedux  = reduxForm({form:'dialogAddMessageForm '})(AddMessageForm);\n\n  return (\n    <div className={styles.dialogs}>\n      <ul className={styles.dialogsItems}>\n        {dialogsElements}\n      </ul>\n      <div className={styles.messages}>\n        {messagesItems}\n        <div className={styles.messages__textContainer}>\n          <Messages/>\n          <AddMessageFormRedux  onSubmit={addNewMessage} />\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\n\nexport default Dialogs;\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\n//делаем HOC редирект если не залогинен\nexport const withAuthRedirect = (Component) =>{\n  class RedirectComponent extends React.Component {\n    render(){\n      if(!this.props.isAuth) return <Redirect to={\"/Login\"} />\n      return <Component {...this.props} />\n    }\n  }\n\n  let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return connectedAuthRedirectComponent;\n}","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {sendMessageCreator} from \"../../redux/dialogsPageReducer\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    }\n  }\n};\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n// export default DialogsContainer;\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}