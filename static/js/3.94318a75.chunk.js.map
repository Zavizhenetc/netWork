{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","styles","author","avatarContainer","authorAvatar","src","photos","large","authorContainer","authorName","fullName","city","dateBirth","Preloader","Post","post","authorAva","text","message","Posts","memo","console","log","postsElements","posts","map","likesCount","key","id","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","input","onSubmit","handleSubmit","Field","addPost","name","placeholder","component","Textarea","validate","required","button","values","newPostText","PostsContainer","connect","state","profilePage","postsData","newPostTextBody","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.94318a75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"ProfileInfo_author__3pmGH\",\"authorAvatar\":\"ProfileInfo_authorAvatar__1n00d\",\"avatarContainer\":\"ProfileInfo_avatarContainer__1Nl_A\",\"authorContainer\":\"ProfileInfo_authorContainer__1OrzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__tkALa\",\"addPost\":\"Posts_addPost__3WYCx\",\"button\":\"Posts_button__32360\",\"input\":\"Posts_input__tIeJQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3rcfg\",\"authorAva\":\"Post_authorAva__3wbGO\",\"text\":\"Post_text__1cnvX\"};","/* eslint-disable no-unused-vars */\nimport React, {Component} from 'react';\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\n\n\nclass ProfileStatus extends React.Component {\n  state = {\n    editMode: false,\n    status: this.props.status,\n  }\n  activateEditMode = () => {\n    this.setState({\n      editMode: true\n    })\n  }\n  deactivateEditMode = () => {\n    this.setState({\n      editMode: false\n    });\n    this.props.updateStatus(this.state.status);\n\n  }\n  onStatusChange = (e) => {\n    this.setState({\n      status: e.currentTarget.value\n    });\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n\n        {!this.state.editMode &&\n        <div>\n          <span onClick={this.activateEditMode}>{this.props.status || \"---\"}</span>\n        </div>\n        }\n        {this.state.editMode &&\n        <div>\n          <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\n                 value={this.state.status}/>\n        </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default ProfileStatus","/* eslint-disable no-unused-vars */\nimport React, {Component, useEffect, useState} from 'react';\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(()=>{\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus( e.currentTarget.value)\n    }\n\n  return (\n    <div>\n      {!editMode &&\n      <div>\n        <span onClick={activateEditMode}>{props.status || \"---\"} </span>\n      </div>\n      }\n      {editMode &&\n      <div>\n        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\n               value={status}/>\n      </div>\n      }\n    </div>\n  )\n};\n\nexport default ProfileStatusWithHooks;","/* eslint-disable no-unused-vars */\nimport React, {Component} from 'react';\nimport styles from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\"\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader/>\n  } else {\n    return (\n      <div>\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n        {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus} />*/}\n        <div className={styles.author}>\n          <div className={styles.avatarContainer}>\n            <img className={styles.authorAvatar}\n              // src=\"https://img3.goodfon.ru/wallpaper/nbig/8/37/dzhon-snou-igra-prestolov-kit.jpg\"\n                 src={props.profile.photos.large}\n            />\n\n          </div>\n          <div className={styles.authorContainer}>\n            <p className={styles.authorName}>Name: {props.profile.fullName}</p>\n            <p className={styles.city}>City: Moscow</p>\n            <p className={styles.dateBirth}>Date of birth: 19.07.1993</p>\n          </div>\n        </div>\n      </div>\n\n    )\n  };\n}\n\nexport default ProfileInfo","import React, { Component } from \"react\";\nimport styles from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={styles.post}>\n\n      <img className={styles.authorAva} src=\"https://pp.userapi.com/c847124/v847124728/335f4/thh2-8S3ZKM.jpg\"/>\n      <p className={styles.text}>{props.message}</p>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport styles from './Posts.module.css';\nimport Post from './Post/Post.jsx';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\n\nconst  Posts= React.memo(props=> {\n  console.log('test')\n  const postsElements = [...props.posts]\n    // .reverse()\n    .map((post) => (\n    <Post message={post.message} likesCount={post.likesCount} key={post.id}/>\n  ));\n  const onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n  const maxLength10 = maxLengthCreator(10);\n  const AddNewPostForm = (props) => {\n    return (\n      <form className={styles.input} onSubmit={props.handleSubmit}>\n        <Field className={styles.addPost} name='newPostText' placeholder='что у вас нового' component={Textarea}\n               validate={[required, maxLength10]}/>\n        <button className={styles.button}>Add post</button>\n      </form>\n    )\n  }\n  const AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n  return (\n    <div className={styles.posts}>\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\n      {postsElements}\n    </div>\n  );\n});\n\nexport default Posts;\n","import React from 'react';\nimport {addPostActionCreator} from '../../../redux/profilePageReducer.js';\nimport Posts from './Posts.jsx';\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.postsData,\n    newPostTextBody: state.profilePage.newPostText,\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n};\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\nexport default PostsContainer;\n","import React, {Component} from \"react\";\nimport styles from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo.jsx\";\nimport PostsContainer from \"./Posts/PostsContainer.jsx\";\nimport {updateStatus} from \"../../redux/profilePageReducer\";\n\n\nconst Profile = (props) => {\n  return (\n    <div className={styles.content}>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n      <PostsContainer />\n    </div>\n  );\n};\nexport default Profile;\n","import React, {Component} from \"react\";\nimport styles from \"./Profile.module.css\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profilePageReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId){\n      userId= this.props.authorizedUserId ;\n      if(!userId){\n        this.props.history.push('/login');\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n\n  }\n  render() {\n    return (\n      <div className={styles.content}>\n        <Profile {...this.props}  profile={this.props.profile}\n                 status={this.props.status} updateStatus={this.props.updateStatus}/>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\nprofile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n\n});\nexport default  compose(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus }),\n  withRouter,\n  // withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}